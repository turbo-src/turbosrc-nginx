# Rename this file ".nginx.conf" and put in appropriate path for this config file.
# And replace the placeholders with your actual domain name, SSL certificate paths, and application server IP address and port.

# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen 443 ssl;
        server_name YOUR_DOMAIN_NAME; # Replace with your domain name
        ssl_certificate PATH_TO_SSL_CERT; # Replace with path to SSL certificate
        ssl_certificate_key PATH_TO_SSL_KEY; # Replace with path to SSL key
        ssl_trusted_certificate PATH_TO_SSL_CHAIN; # Replace with path to SSL chain

	# The root directive in the Nginx server block specifies the root directory for the website files.
	# This is the directory that Nginx will look in to serve files when it receives a request for your
	# website. In this case, your app is running on another server, so the Nginx server is used as a
	# reverse proxy. This means that when it receives a request, it will pass the request on to your
	# app running on the other server, and then it will return the response from your app back to the
	# client. The root directive would not be applicable in this case.

	#root /path/to/webroot;

	# Doesn't appear to be necessary to include as there is no such files in /etc/nginx/default.d
        #include /etc/nginx/default.d/*.conf;
        location / {
	   # It should be set to the address of the actual application server that Nginx is working with,
	   # and not the address of the Nginx reverse proxy itself.
           proxy_pass http://APP_SERVER_IP:APP_SERVER_PORT/graphql;; # Replace with your app server IP, port and keep "graphql".
           proxy_set_header Host $host;
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}